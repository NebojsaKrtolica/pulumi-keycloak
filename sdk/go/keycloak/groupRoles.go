// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package keycloak

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/mrparkers/terraform-provider-keycloak/blob/master/website/docs/r/group_roles.html.markdown.
type GroupRoles struct {
	s *pulumi.ResourceState
}

// NewGroupRoles registers a new resource with the given unique name, arguments, and options.
func NewGroupRoles(ctx *pulumi.Context,
	name string, args *GroupRolesArgs, opts ...pulumi.ResourceOpt) (*GroupRoles, error) {
	if args == nil || args.RealmId == nil {
		return nil, errors.New("missing required argument 'RealmId'")
	}
	if args == nil || args.RoleIds == nil {
		return nil, errors.New("missing required argument 'RoleIds'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["groupId"] = nil
		inputs["realmId"] = nil
		inputs["roleIds"] = nil
	} else {
		inputs["groupId"] = args.GroupId
		inputs["realmId"] = args.RealmId
		inputs["roleIds"] = args.RoleIds
	}
	s, err := ctx.RegisterResource("keycloak:index/groupRoles:GroupRoles", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &GroupRoles{s: s}, nil
}

// GetGroupRoles gets an existing GroupRoles resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroupRoles(ctx *pulumi.Context,
	name string, id pulumi.ID, state *GroupRolesState, opts ...pulumi.ResourceOpt) (*GroupRoles, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["groupId"] = state.GroupId
		inputs["realmId"] = state.RealmId
		inputs["roleIds"] = state.RoleIds
	}
	s, err := ctx.ReadResource("keycloak:index/groupRoles:GroupRoles", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &GroupRoles{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *GroupRoles) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *GroupRoles) ID() pulumi.IDOutput {
	return r.s.ID()
}

func (r *GroupRoles) GroupId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["groupId"])
}

func (r *GroupRoles) RealmId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["realmId"])
}

func (r *GroupRoles) RoleIds() pulumi.ArrayOutput {
	return (pulumi.ArrayOutput)(r.s.State["roleIds"])
}

// Input properties used for looking up and filtering GroupRoles resources.
type GroupRolesState struct {
	GroupId interface{}
	RealmId interface{}
	RoleIds interface{}
}

// The set of arguments for constructing a GroupRoles resource.
type GroupRolesArgs struct {
	GroupId interface{}
	RealmId interface{}
	RoleIds interface{}
}
