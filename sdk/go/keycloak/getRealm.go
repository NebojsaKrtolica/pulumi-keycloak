// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package keycloak

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

func LookupRealm(ctx *pulumi.Context, args *GetRealmArgs) (*GetRealmResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["internationalizations"] = args.Internationalizations
		inputs["realm"] = args.Realm
		inputs["securityDefenses"] = args.SecurityDefenses
		inputs["smtpServers"] = args.SmtpServers
	}
	outputs, err := ctx.Invoke("keycloak:index/getRealm:getRealm", inputs)
	if err != nil {
		return nil, err
	}
	return &GetRealmResult{
		AccessCodeLifespan: outputs["accessCodeLifespan"],
		AccessCodeLifespanLogin: outputs["accessCodeLifespanLogin"],
		AccessCodeLifespanUserAction: outputs["accessCodeLifespanUserAction"],
		AccessTokenLifespan: outputs["accessTokenLifespan"],
		AccessTokenLifespanForImplicitFlow: outputs["accessTokenLifespanForImplicitFlow"],
		AccountTheme: outputs["accountTheme"],
		ActionTokenGeneratedByAdminLifespan: outputs["actionTokenGeneratedByAdminLifespan"],
		ActionTokenGeneratedByUserLifespan: outputs["actionTokenGeneratedByUserLifespan"],
		AdminTheme: outputs["adminTheme"],
		BrowserFlow: outputs["browserFlow"],
		ClientAuthenticationFlow: outputs["clientAuthenticationFlow"],
		DirectGrantFlow: outputs["directGrantFlow"],
		DisplayName: outputs["displayName"],
		DockerAuthenticationFlow: outputs["dockerAuthenticationFlow"],
		DuplicateEmailsAllowed: outputs["duplicateEmailsAllowed"],
		EditUsernameAllowed: outputs["editUsernameAllowed"],
		EmailTheme: outputs["emailTheme"],
		Enabled: outputs["enabled"],
		Internationalizations: outputs["internationalizations"],
		LoginTheme: outputs["loginTheme"],
		LoginWithEmailAllowed: outputs["loginWithEmailAllowed"],
		OfflineSessionIdleTimeout: outputs["offlineSessionIdleTimeout"],
		OfflineSessionMaxLifespan: outputs["offlineSessionMaxLifespan"],
		PasswordPolicy: outputs["passwordPolicy"],
		Realm: outputs["realm"],
		RefreshTokenMaxReuse: outputs["refreshTokenMaxReuse"],
		RegistrationAllowed: outputs["registrationAllowed"],
		RegistrationEmailAsUsername: outputs["registrationEmailAsUsername"],
		RegistrationFlow: outputs["registrationFlow"],
		RememberMe: outputs["rememberMe"],
		ResetCredentialsFlow: outputs["resetCredentialsFlow"],
		ResetPasswordAllowed: outputs["resetPasswordAllowed"],
		SecurityDefenses: outputs["securityDefenses"],
		SmtpServers: outputs["smtpServers"],
		SsoSessionIdleTimeout: outputs["ssoSessionIdleTimeout"],
		SsoSessionMaxLifespan: outputs["ssoSessionMaxLifespan"],
		VerifyEmail: outputs["verifyEmail"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getRealm.
type GetRealmArgs struct {
	Internationalizations interface{}
	Realm interface{}
	SecurityDefenses interface{}
	SmtpServers interface{}
}

// A collection of values returned by getRealm.
type GetRealmResult struct {
	AccessCodeLifespan interface{}
	AccessCodeLifespanLogin interface{}
	AccessCodeLifespanUserAction interface{}
	AccessTokenLifespan interface{}
	AccessTokenLifespanForImplicitFlow interface{}
	AccountTheme interface{}
	ActionTokenGeneratedByAdminLifespan interface{}
	ActionTokenGeneratedByUserLifespan interface{}
	AdminTheme interface{}
	BrowserFlow interface{}
	ClientAuthenticationFlow interface{}
	DirectGrantFlow interface{}
	DisplayName interface{}
	DockerAuthenticationFlow interface{}
	DuplicateEmailsAllowed interface{}
	EditUsernameAllowed interface{}
	EmailTheme interface{}
	Enabled interface{}
	Internationalizations interface{}
	LoginTheme interface{}
	LoginWithEmailAllowed interface{}
	OfflineSessionIdleTimeout interface{}
	OfflineSessionMaxLifespan interface{}
	PasswordPolicy interface{}
	Realm interface{}
	RefreshTokenMaxReuse interface{}
	RegistrationAllowed interface{}
	RegistrationEmailAsUsername interface{}
	RegistrationFlow interface{}
	RememberMe interface{}
	ResetCredentialsFlow interface{}
	ResetPasswordAllowed interface{}
	SecurityDefenses interface{}
	SmtpServers interface{}
	SsoSessionIdleTimeout interface{}
	SsoSessionMaxLifespan interface{}
	VerifyEmail interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
