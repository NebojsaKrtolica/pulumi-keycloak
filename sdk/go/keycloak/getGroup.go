// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package keycloak

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// ## # .Group data source
// 
// This data source can be used to fetch properties of a Keycloak group for
// usage with other resources, such as `.GroupRoles`.
// 
// ### Argument Reference
// 
// The following arguments are supported:
// 
// - `realmId` - (Required) The realm this group exists within.
// - `name` - (Required) The name of the group
// 
// ### Attributes Reference
// 
// In addition to the arguments listed above, the following computed attributes are exported:
// 
// - `id` - The unique ID of the group, which can be used as an argument to
//   other resources supported by this provider.
//
// > This content is derived from https://github.com/mrparkers/terraform-provider-keycloak/blob/master/website/docs/d/group.html.markdown.
func LookupGroup(ctx *pulumi.Context, args *GetGroupArgs) (*GetGroupResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["name"] = args.Name
		inputs["realmId"] = args.RealmId
	}
	outputs, err := ctx.Invoke("keycloak:index/getGroup:getGroup", inputs)
	if err != nil {
		return nil, err
	}
	return &GetGroupResult{
		Name: outputs["name"],
		RealmId: outputs["realmId"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getGroup.
type GetGroupArgs struct {
	Name interface{}
	RealmId interface{}
}

// A collection of values returned by getGroup.
type GetGroupResult struct {
	Name interface{}
	RealmId interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
