// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package keycloak

import (
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source uses the [ClientDescriptionConverter](https://www.keycloak.org/docs-api/6.0/javadocs/org/keycloak/exportimport/ClientDescriptionConverter.html) API to convert a generic client description into a Keycloak
// client. This data can then be used to manage the client within Keycloak.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-keycloak/sdk/v4/go/keycloak"
// 	"github.com/pulumi/pulumi-keycloak/sdk/v4/go/keycloak/saml"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		realm, err := keycloak.NewRealm(ctx, "realm", &keycloak.RealmArgs{
// 			Realm:   pulumi.String("my-realm"),
// 			Enabled: pulumi.Bool(true),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = saml.NewClient(ctx, "samlClientClient", &saml.ClientArgs{
// 			RealmId: realm.ID(),
// 			ClientId: samlClientClientDescriptionConverter.ApplyT(func(samlClientClientDescriptionConverter keycloak.GetClientDescriptionConverterResult) (string, error) {
// 				return samlClientClientDescriptionConverter.ClientId, nil
// 			}).(pulumi.StringOutput),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetClientDescriptionConverter(ctx *pulumi.Context, args *GetClientDescriptionConverterArgs, opts ...pulumi.InvokeOption) (*GetClientDescriptionConverterResult, error) {
	var rv GetClientDescriptionConverterResult
	err := ctx.Invoke("keycloak:index/getClientDescriptionConverter:getClientDescriptionConverter", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClientDescriptionConverter.
type GetClientDescriptionConverterArgs struct {
	// The body of the request to convert.
	Body string `pulumi:"body"`
	// The realm to use for the client description converter API call.
	RealmId string `pulumi:"realmId"`
}

// A collection of values returned by getClientDescriptionConverter.
type GetClientDescriptionConverterResult struct {
	Access                             map[string]interface{} `pulumi:"access"`
	AdminUrl                           string                 `pulumi:"adminUrl"`
	Attributes                         map[string]interface{} `pulumi:"attributes"`
	AuthenticationFlowBindingOverrides map[string]interface{} `pulumi:"authenticationFlowBindingOverrides"`
	AuthorizationServicesEnabled       bool                   `pulumi:"authorizationServicesEnabled"`
	AuthorizationSettings              map[string]interface{} `pulumi:"authorizationSettings"`
	BaseUrl                            string                 `pulumi:"baseUrl"`
	BearerOnly                         bool                   `pulumi:"bearerOnly"`
	Body                               string                 `pulumi:"body"`
	ClientAuthenticatorType            string                 `pulumi:"clientAuthenticatorType"`
	ClientId                           string                 `pulumi:"clientId"`
	ConsentRequired                    string                 `pulumi:"consentRequired"`
	DefaultClientScopes                []string               `pulumi:"defaultClientScopes"`
	DefaultRoles                       []string               `pulumi:"defaultRoles"`
	Description                        string                 `pulumi:"description"`
	DirectAccessGrantsEnabled          bool                   `pulumi:"directAccessGrantsEnabled"`
	Enabled                            bool                   `pulumi:"enabled"`
	FrontchannelLogout                 bool                   `pulumi:"frontchannelLogout"`
	FullScopeAllowed                   bool                   `pulumi:"fullScopeAllowed"`
	// The provider-assigned unique ID for this managed resource.
	Id                      string                                        `pulumi:"id"`
	ImplicitFlowEnabled     bool                                          `pulumi:"implicitFlowEnabled"`
	Name                    string                                        `pulumi:"name"`
	NotBefore               int                                           `pulumi:"notBefore"`
	OptionalClientScopes    []string                                      `pulumi:"optionalClientScopes"`
	Origin                  string                                        `pulumi:"origin"`
	Protocol                string                                        `pulumi:"protocol"`
	ProtocolMappers         []GetClientDescriptionConverterProtocolMapper `pulumi:"protocolMappers"`
	PublicClient            bool                                          `pulumi:"publicClient"`
	RealmId                 string                                        `pulumi:"realmId"`
	RedirectUris            []string                                      `pulumi:"redirectUris"`
	RegisteredNodes         map[string]interface{}                        `pulumi:"registeredNodes"`
	RegistrationAccessToken string                                        `pulumi:"registrationAccessToken"`
	RootUrl                 string                                        `pulumi:"rootUrl"`
	Secret                  string                                        `pulumi:"secret"`
	ServiceAccountsEnabled  bool                                          `pulumi:"serviceAccountsEnabled"`
	StandardFlowEnabled     bool                                          `pulumi:"standardFlowEnabled"`
	SurrogateAuthRequired   bool                                          `pulumi:"surrogateAuthRequired"`
	WebOrigins              []string                                      `pulumi:"webOrigins"`
}
