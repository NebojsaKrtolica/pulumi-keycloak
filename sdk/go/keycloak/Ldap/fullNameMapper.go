// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package Ldap

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type FullNameMapper struct {
	s *pulumi.ResourceState
}

// NewFullNameMapper registers a new resource with the given unique name, arguments, and options.
func NewFullNameMapper(ctx *pulumi.Context,
	name string, args *FullNameMapperArgs, opts ...pulumi.ResourceOpt) (*FullNameMapper, error) {
	if args == nil || args.LdapFullNameAttribute == nil {
		return nil, errors.New("missing required argument 'LdapFullNameAttribute'")
	}
	if args == nil || args.LdapUserFederationId == nil {
		return nil, errors.New("missing required argument 'LdapUserFederationId'")
	}
	if args == nil || args.RealmId == nil {
		return nil, errors.New("missing required argument 'RealmId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["ldapFullNameAttribute"] = nil
		inputs["ldapUserFederationId"] = nil
		inputs["name"] = nil
		inputs["readOnly"] = nil
		inputs["realmId"] = nil
		inputs["writeOnly"] = nil
	} else {
		inputs["ldapFullNameAttribute"] = args.LdapFullNameAttribute
		inputs["ldapUserFederationId"] = args.LdapUserFederationId
		inputs["name"] = args.Name
		inputs["readOnly"] = args.ReadOnly
		inputs["realmId"] = args.RealmId
		inputs["writeOnly"] = args.WriteOnly
	}
	s, err := ctx.RegisterResource("keycloak:Ldap/fullNameMapper:FullNameMapper", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &FullNameMapper{s: s}, nil
}

// GetFullNameMapper gets an existing FullNameMapper resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFullNameMapper(ctx *pulumi.Context,
	name string, id pulumi.ID, state *FullNameMapperState, opts ...pulumi.ResourceOpt) (*FullNameMapper, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["ldapFullNameAttribute"] = state.LdapFullNameAttribute
		inputs["ldapUserFederationId"] = state.LdapUserFederationId
		inputs["name"] = state.Name
		inputs["readOnly"] = state.ReadOnly
		inputs["realmId"] = state.RealmId
		inputs["writeOnly"] = state.WriteOnly
	}
	s, err := ctx.ReadResource("keycloak:Ldap/fullNameMapper:FullNameMapper", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &FullNameMapper{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *FullNameMapper) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *FullNameMapper) ID() pulumi.IDOutput {
	return r.s.ID()
}

func (r *FullNameMapper) LdapFullNameAttribute() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["ldapFullNameAttribute"])
}

// The ldap user federation provider to attach this mapper to.
func (r *FullNameMapper) LdapUserFederationId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["ldapUserFederationId"])
}

// Display name of the mapper when displayed in the console.
func (r *FullNameMapper) Name() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["name"])
}

func (r *FullNameMapper) ReadOnly() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["readOnly"])
}

// The realm in which the ldap user federation provider exists.
func (r *FullNameMapper) RealmId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["realmId"])
}

func (r *FullNameMapper) WriteOnly() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["writeOnly"])
}

// Input properties used for looking up and filtering FullNameMapper resources.
type FullNameMapperState struct {
	LdapFullNameAttribute interface{}
	// The ldap user federation provider to attach this mapper to.
	LdapUserFederationId interface{}
	// Display name of the mapper when displayed in the console.
	Name interface{}
	ReadOnly interface{}
	// The realm in which the ldap user federation provider exists.
	RealmId interface{}
	WriteOnly interface{}
}

// The set of arguments for constructing a FullNameMapper resource.
type FullNameMapperArgs struct {
	LdapFullNameAttribute interface{}
	// The ldap user federation provider to attach this mapper to.
	LdapUserFederationId interface{}
	// Display name of the mapper when displayed in the console.
	Name interface{}
	ReadOnly interface{}
	// The realm in which the ldap user federation provider exists.
	RealmId interface{}
	WriteOnly interface{}
}
