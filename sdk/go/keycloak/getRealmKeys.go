// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package keycloak

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// ## # .getRealmKeys data source
// 
// Use this data source to get the keys of a realm. Keys can be filtered by algorithm and status.
// 
// Remarks:
// 
// - A key must meet all filter criteria
// - This datasource may return more than one value.
// - If no key matches the filter criteria, then an error is returned.
// 
// ### Argument Reference
// 
// The following arguments are supported:
// 
// - `realmId` - (Required) The realm of which the keys are retrieved.
// - `algorithms` - (Optional) When specified, keys are filtered by algorithm (values for algorithm: `HS256`, `RS256`,`AES`, ...)
// - `status` - (Optional) When specified, keys are filtered by status (values for status: `ACTIVE`, `DISABLED` and `PASSIVE`)
//
// > This content is derived from https://github.com/mrparkers/terraform-provider-keycloak/blob/master/website/docs/d/realm_keys.html.markdown.
func LookupRealmKeys(ctx *pulumi.Context, args *GetRealmKeysArgs) (*GetRealmKeysResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["algorithms"] = args.Algorithms
		inputs["realmId"] = args.RealmId
		inputs["statuses"] = args.Statuses
	}
	outputs, err := ctx.Invoke("keycloak:index/getRealmKeys:getRealmKeys", inputs)
	if err != nil {
		return nil, err
	}
	return &GetRealmKeysResult{
		Algorithms: outputs["algorithms"],
		Keys: outputs["keys"],
		RealmId: outputs["realmId"],
		Statuses: outputs["statuses"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getRealmKeys.
type GetRealmKeysArgs struct {
	Algorithms interface{}
	RealmId interface{}
	Statuses interface{}
}

// A collection of values returned by getRealmKeys.
type GetRealmKeysResult struct {
	Algorithms interface{}
	Keys interface{}
	RealmId interface{}
	Statuses interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
