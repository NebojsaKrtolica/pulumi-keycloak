// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package config

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
	"github.com/pulumi/pulumi/sdk/go/pulumi/config"
)

func GetClientId(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "keycloak:clientId")
	if err == nil {
		return v
	}
	if dv, ok := getEnvOrDefault("", nil, "KEYCLOAK_CLIENT_ID").(string); ok {
		return dv
	}
	return v
}

func GetClientSecret(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "keycloak:clientSecret")
	if err == nil {
		return v
	}
	if dv, ok := getEnvOrDefault("", nil, "KEYCLOAK_CLIENT_SECRET").(string); ok {
		return dv
	}
	return v
}

// Timeout (in seconds) of the Keycloak client
func GetClientTimeout(ctx *pulumi.Context) int {
	v, err := config.TryInt(ctx, "keycloak:clientTimeout")
	if err == nil {
		return v
	}
	if dv, ok := getEnvOrDefault(5, parseEnvInt, "KEYCLOAK_CLIENT_TIMEOUT").(int); ok {
		return dv
	}
	return v
}

// Whether or not to login to Keycloak instance on provider initialization
func GetInitialLogin(ctx *pulumi.Context) bool {
	return config.GetBool(ctx, "keycloak:initialLogin")
}

func GetPassword(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "keycloak:password")
	if err == nil {
		return v
	}
	if dv, ok := getEnvOrDefault("", nil, "KEYCLOAK_PASSWORD").(string); ok {
		return dv
	}
	return v
}

func GetRealm(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "keycloak:realm")
	if err == nil {
		return v
	}
	if dv, ok := getEnvOrDefault("master", nil, "KEYCLOAK_REALM").(string); ok {
		return dv
	}
	return v
}

// The base URL of the Keycloak instance, before `/auth`
func GetUrl(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "keycloak:url")
	if err == nil {
		return v
	}
	if dv, ok := getEnvOrDefault("", nil, "KEYCLOAK_URL").(string); ok {
		return dv
	}
	return v
}

func GetUsername(ctx *pulumi.Context) string {
	v, err := config.Try(ctx, "keycloak:username")
	if err == nil {
		return v
	}
	if dv, ok := getEnvOrDefault("", nil, "KEYCLOAK_USER").(string); ok {
		return dv
	}
	return v
}
