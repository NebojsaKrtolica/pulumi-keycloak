// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * This data source can be used to fetch the ID of an authentication flow within Keycloak.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as keycloak from "@pulumi/keycloak";
 *
 * const realm = new keycloak.Realm("realm", {
 *     realm: "my-realm",
 *     enabled: true,
 * });
 * const browserAuthCookie = realm.id.apply(id => keycloak.getAuthenticationFlow({
 *     realmId: id,
 *     alias: "browser",
 * }));
 * ```
 */
export function getAuthenticationFlow(args: GetAuthenticationFlowArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthenticationFlowResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("keycloak:index/getAuthenticationFlow:getAuthenticationFlow", {
        "alias": args.alias,
        "realmId": args.realmId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAuthenticationFlow.
 */
export interface GetAuthenticationFlowArgs {
    /**
     * The alias of the flow.
     */
    readonly alias: string;
    /**
     * The realm the authentication flow exists in.
     */
    readonly realmId: string;
}

/**
 * A collection of values returned by getAuthenticationFlow.
 */
export interface GetAuthenticationFlowResult {
    readonly alias: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly realmId: string;
}
