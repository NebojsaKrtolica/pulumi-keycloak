// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

export function getRealm(args: GetRealmArgs, opts?: pulumi.InvokeOptions): Promise<GetRealmResult> & GetRealmResult {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    const promise: Promise<GetRealmResult> = pulumi.runtime.invoke("keycloak:index/getRealm:getRealm", {
        "internationalizations": args.internationalizations,
        "realm": args.realm,
        "securityDefenses": args.securityDefenses,
        "smtpServers": args.smtpServers,
    }, opts);

    return pulumi.utils.liftProperties(promise, opts);
}

/**
 * A collection of arguments for invoking getRealm.
 */
export interface GetRealmArgs {
    readonly internationalizations?: inputs.GetRealmInternationalization[];
    readonly realm: string;
    readonly securityDefenses?: inputs.GetRealmSecurityDefense[];
    readonly smtpServers?: inputs.GetRealmSmtpServer[];
}

/**
 * A collection of values returned by getRealm.
 */
export interface GetRealmResult {
    readonly accessCodeLifespan: string;
    readonly accessCodeLifespanLogin: string;
    readonly accessCodeLifespanUserAction: string;
    readonly accessTokenLifespan: string;
    readonly accessTokenLifespanForImplicitFlow: string;
    readonly accountTheme: string;
    readonly actionTokenGeneratedByAdminLifespan: string;
    readonly actionTokenGeneratedByUserLifespan: string;
    readonly adminTheme: string;
    readonly browserFlow: string;
    readonly clientAuthenticationFlow: string;
    readonly directGrantFlow: string;
    readonly displayName: string;
    readonly dockerAuthenticationFlow: string;
    readonly duplicateEmailsAllowed: boolean;
    readonly editUsernameAllowed: boolean;
    readonly emailTheme: string;
    readonly enabled: boolean;
    readonly internationalizations: outputs.GetRealmInternationalization[];
    readonly loginTheme: string;
    readonly loginWithEmailAllowed: boolean;
    readonly offlineSessionIdleTimeout: string;
    readonly offlineSessionMaxLifespan: string;
    readonly passwordPolicy: string;
    readonly realm: string;
    readonly refreshTokenMaxReuse: number;
    readonly registrationAllowed: boolean;
    readonly registrationEmailAsUsername: boolean;
    readonly registrationFlow: string;
    readonly rememberMe: boolean;
    readonly resetCredentialsFlow: string;
    readonly resetPasswordAllowed: boolean;
    readonly securityDefenses: outputs.GetRealmSecurityDefense[];
    readonly smtpServers: outputs.GetRealmSmtpServer[];
    readonly ssoSessionIdleTimeout: string;
    readonly ssoSessionMaxLifespan: string;
    readonly verifyEmail: boolean;
    /**
     * id is the provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
