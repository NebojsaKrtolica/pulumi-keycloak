// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Keycloak.OpenId
{
    public static partial class Invokes
    {
        /// <summary>
        /// ## # keycloak.openid.Client data source
        /// 
        /// This data source can be used to fetch properties of a Keycloak OpenID client for usage with other resources.
        /// 
        /// ### Argument Reference
        /// 
        /// The following arguments are supported:
        /// 
        /// - `realm_id` - (Required) The realm id.
        /// - `client_id` - (Required) The client id.
        /// 
        /// ### Attributes Reference
        /// 
        /// See the docs for the `keycloak.openid.Client` resource for details on the exported attributes.
        /// 
        /// &gt; This content is derived from https://github.com/mrparkers/terraform-provider-keycloak/blob/master/website/docs/d/keycloak_openid_client.html.markdown.
        /// </summary>
        [Obsolete("Use GetClient.InvokeAsync() instead")]
        public static Task<GetClientResult> GetClient(GetClientArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClientResult>("keycloak:openid/getClient:getClient", args ?? InvokeArgs.Empty, options.WithVersion());
    }
    public static class GetClient
    {
        /// <summary>
        /// ## # keycloak.openid.Client data source
        /// 
        /// This data source can be used to fetch properties of a Keycloak OpenID client for usage with other resources.
        /// 
        /// ### Argument Reference
        /// 
        /// The following arguments are supported:
        /// 
        /// - `realm_id` - (Required) The realm id.
        /// - `client_id` - (Required) The client id.
        /// 
        /// ### Attributes Reference
        /// 
        /// See the docs for the `keycloak.openid.Client` resource for details on the exported attributes.
        /// 
        /// &gt; This content is derived from https://github.com/mrparkers/terraform-provider-keycloak/blob/master/website/docs/d/keycloak_openid_client.html.markdown.
        /// </summary>
        public static Task<GetClientResult> InvokeAsync(GetClientArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetClientResult>("keycloak:openid/getClient:getClient", args ?? InvokeArgs.Empty, options.WithVersion());
    }

    public sealed class GetClientArgs : Pulumi.InvokeArgs
    {
        [Input("clientId", required: true)]
        public string ClientId { get; set; } = null!;

        [Input("realmId", required: true)]
        public string RealmId { get; set; } = null!;

        public GetClientArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetClientResult
    {
        public readonly string AccessType;
        public readonly Outputs.GetClientAuthorizationResult Authorization;
        public readonly string ClientId;
        public readonly string ClientSecret;
        public readonly string Description;
        public readonly bool DirectAccessGrantsEnabled;
        public readonly bool Enabled;
        public readonly bool FullScopeAllowed;
        public readonly bool ImplicitFlowEnabled;
        public readonly string Name;
        public readonly string RealmId;
        public readonly string ResourceServerId;
        public readonly string ServiceAccountUserId;
        public readonly bool ServiceAccountsEnabled;
        public readonly bool StandardFlowEnabled;
        public readonly ImmutableArray<string> ValidRedirectUris;
        public readonly ImmutableArray<string> WebOrigins;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetClientResult(
            string accessType,
            Outputs.GetClientAuthorizationResult authorization,
            string clientId,
            string clientSecret,
            string description,
            bool directAccessGrantsEnabled,
            bool enabled,
            bool fullScopeAllowed,
            bool implicitFlowEnabled,
            string name,
            string realmId,
            string resourceServerId,
            string serviceAccountUserId,
            bool serviceAccountsEnabled,
            bool standardFlowEnabled,
            ImmutableArray<string> validRedirectUris,
            ImmutableArray<string> webOrigins,
            string id)
        {
            AccessType = accessType;
            Authorization = authorization;
            ClientId = clientId;
            ClientSecret = clientSecret;
            Description = description;
            DirectAccessGrantsEnabled = directAccessGrantsEnabled;
            Enabled = enabled;
            FullScopeAllowed = fullScopeAllowed;
            ImplicitFlowEnabled = implicitFlowEnabled;
            Name = name;
            RealmId = realmId;
            ResourceServerId = resourceServerId;
            ServiceAccountUserId = serviceAccountUserId;
            ServiceAccountsEnabled = serviceAccountsEnabled;
            StandardFlowEnabled = standardFlowEnabled;
            ValidRedirectUris = validRedirectUris;
            WebOrigins = webOrigins;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetClientAuthorizationResult
    {
        public readonly bool AllowRemoteResourceManagement;
        public readonly string PolicyEnforcementMode;

        [OutputConstructor]
        private GetClientAuthorizationResult(
            bool allowRemoteResourceManagement,
            string policyEnforcementMode)
        {
            AllowRemoteResourceManagement = allowRemoteResourceManagement;
            PolicyEnforcementMode = policyEnforcementMode;
        }
    }
    }
}
