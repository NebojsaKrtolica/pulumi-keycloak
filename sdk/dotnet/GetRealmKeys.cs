// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Keycloak
{
    public static partial class Invokes
    {
        public static Task<GetRealmKeysResult> GetRealmKeys(GetRealmKeysArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRealmKeysResult>("keycloak:index/getRealmKeys:getRealmKeys", args ?? ResourceArgs.Empty, options.WithVersion());
    }

    public sealed class GetRealmKeysArgs : Pulumi.ResourceArgs
    {
        [Input("algorithms")]
        private InputList<string>? _algorithms;
        public InputList<string> Algorithms
        {
            get => _algorithms ?? (_algorithms = new InputList<string>());
            set => _algorithms = value;
        }

        [Input("realmId", required: true)]
        public Input<string> RealmId { get; set; } = null!;

        [Input("statuses")]
        private InputList<string>? _statuses;
        public InputList<string> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<string>());
            set => _statuses = value;
        }

        public GetRealmKeysArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetRealmKeysResult
    {
        public readonly ImmutableArray<string> Algorithms;
        public readonly ImmutableArray<Outputs.GetRealmKeysKeysResult> Keys;
        public readonly string RealmId;
        public readonly ImmutableArray<string> Statuses;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetRealmKeysResult(
            ImmutableArray<string> algorithms,
            ImmutableArray<Outputs.GetRealmKeysKeysResult> keys,
            string realmId,
            ImmutableArray<string> statuses,
            string id)
        {
            Algorithms = algorithms;
            Keys = keys;
            RealmId = realmId;
            Statuses = statuses;
            Id = id;
        }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class GetRealmKeysKeysResult
    {
        public readonly string Algorithm;
        public readonly string Certificate;
        public readonly string Kid;
        public readonly string ProviderId;
        public readonly int ProviderPriority;
        public readonly string PublicKey;
        public readonly string Status;
        public readonly string Type;

        [OutputConstructor]
        private GetRealmKeysKeysResult(
            string algorithm,
            string certificate,
            string kid,
            string providerId,
            int providerPriority,
            string publicKey,
            string status,
            string type)
        {
            Algorithm = algorithm;
            Certificate = certificate;
            Kid = kid;
            ProviderId = providerId;
            ProviderPriority = providerPriority;
            PublicKey = publicKey;
            Status = status;
            Type = type;
        }
    }
    }
}
